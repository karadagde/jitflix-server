package Jitflix.Jitflix.auth;import com.fasterxml.jackson.databind.ObjectMapper;import jakarta.servlet.ServletException;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import org.springframework.http.MediaType;import org.springframework.security.core.AuthenticationException;import org.springframework.security.web.AuthenticationEntryPoint;import org.springframework.stereotype.Component;import java.io.IOException;import java.util.HashMap;import java.util.Map;// This class in not in use, but it is a good example of how to handle errors// it can be used in the future if we want to handle errors in a different way@Componentpublic class AuthEntryPointJwt implements AuthenticationEntryPoint {    @Override    public void commence(HttpServletRequest request,                         HttpServletResponse response,                         AuthenticationException authException) throws            IOException, ServletException {        response.setContentType(MediaType.APPLICATION_JSON_VALUE);        response.setStatus(HttpServletResponse.SC_UNAUTHORIZED);        final Map<String, Object> body = new HashMap<>();        body.put("status", HttpServletResponse.SC_UNAUTHORIZED);        body.put("error", "Unauthorized");        body.put("message", authException.getMessage());        body.put("path", request.getServletPath());        final ObjectMapper mapper = new ObjectMapper();        mapper.writeValue(response.getOutputStream(), body);    }}