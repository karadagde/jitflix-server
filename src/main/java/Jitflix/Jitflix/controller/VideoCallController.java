package Jitflix.Jitflix.controller;import Jitflix.Jitflix.entity.pg.AppUser;import Jitflix.Jitflix.entity.pg.VideoCall;import Jitflix.Jitflix.service.videcall.VideoCallService;import org.springframework.http.ResponseEntity;import org.springframework.security.core.Authentication;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.List;import static java.lang.Long.parseLong;@RestController@RequestMapping("/api/v1/videocall")public class VideoCallController {    private final VideoCallService videoCallService;    public VideoCallController(VideoCallService videoCallService) {        this.videoCallService = videoCallService;    }    @GetMapping("/create")    public ResponseEntity<String> createVideoCall(            Authentication authentication) {        AppUser user = (AppUser) authentication.getPrincipal();        if (user == null) {            return ResponseEntity.badRequest().body(null);        }        Long id = videoCallService.createVideoCall(user);//        String roomId = videoCallService.getCreatedVideoCallRoomId(id);        return ResponseEntity.ok(id.toString());    }    @GetMapping("/get-by-host")    public ResponseEntity<List<VideoCall>> getVideoCallsByHost(            Authentication authentication) {        AppUser user = (AppUser) authentication.getPrincipal();        if (user == null) {            return ResponseEntity.badRequest().body(null);        }        List<VideoCall> videoCalls = videoCallService.getVideoCallsByHost(user);        return ResponseEntity.ok(videoCalls);    }    @GetMapping("/get-by-room/{id}")    public ResponseEntity<VideoCall> getVideoCallById(@PathVariable String id) {        VideoCall videoCall = videoCallService.getVideoCallById(parseLong(id));        return ResponseEntity.ok(videoCall);    }}